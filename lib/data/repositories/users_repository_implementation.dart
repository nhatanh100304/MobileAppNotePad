import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase/domain/entities/user_profile.dart';
import 'package:firebase/domain/repositories/user_repository.dart';


class UserRepositoryImplementation implements UserRepository {
  final FirebaseFirestore _firestore = FirebaseFirestore.instance;

  @override
  Future<UserProfile> getUserProfile(String uid) async {
    try {
      // üîπ Ki·ªÉm tra n·∫øu collection 'users' r·ªóng, t·ª± t·∫°o m·ªôt user m·∫∑c ƒë·ªãnh
      await _ensureUsersCollectionExists();

      DocumentSnapshot userDoc = await _firestore.collection('users').doc(uid).get();

      if (userDoc.exists) {
        return UserProfile.fromMap(userDoc.data() as Map<String, dynamic>);
      } else {
        throw Exception("Ng∆∞·ªùi d√πng kh√¥ng t·ªìn t·∫°i");
      }
    } catch (e) {
      throw Exception("L·ªói khi l·∫•y th√¥ng tin ng∆∞·ªùi d√πng: ${e.toString()}");
    }
  }

  @override
  Future<void> saveUserProfile(UserProfile profile) async {
    try {
      // üîπ ƒê·∫£m b·∫£o collection t·ªìn t·∫°i tr∆∞·ªõc khi l∆∞u d·ªØ li·ªáu
      await _ensureUsersCollectionExists();

      await _firestore.collection('users').doc(profile.uid).set(profile.toMap());
    } catch (e) {
      throw Exception("L·ªói khi l∆∞u th√¥ng tin ng∆∞·ªùi d√πng: ${e.toString()}");
    }
  }

  @override
  Future<void> updateUserProfile(UserProfile profile) async {
    await _firestore.collection('users').doc(profile.uid).update(profile.toMap());
  }

  @override
  Future<void> deleteUserProfile(String uid) async {
    await _firestore.collection('users').doc(uid).delete();
  }

  /// üîπ Ph∆∞∆°ng th·ª©c ki·ªÉm tra collection 'users' c√≥ t·ªìn t·∫°i hay kh√¥ng
  Future<void> _ensureUsersCollectionExists() async {
    final collectionRef = _firestore.collection("users");
    final snapshot = await collectionRef.limit(1).get();

    if (snapshot.docs.isEmpty) {
      // üîπ N·∫øu collection r·ªóng, t·∫°o m·ªôt user m·∫∑c ƒë·ªãnh ƒë·ªÉ duy tr√¨ collection
      await collectionRef.doc("default_user").set({
        "uid": "default_user",
        "name": "Default User",
        "email": "default@example.com",
        "createdAt": Timestamp.now(),
      });
    }
  }
}
